(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{621:function(_,v,e){"use strict";e.r(v);var s=e(6),o=Object(s.a)({},(function(){var _=this,v=_.$createElement,e=_._self._c||v;return e("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[e("h2",{attrs:{id:"前言"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[_._v("#")]),_._v(" 前言")]),_._v(" "),e("p",[_._v("我们总是习惯于先在 "),e("code",[_._v("IDE")]),_._v(" 或者文本编辑器中修改代码，然后再进入 "),e("code",[_._v("Chorme")]),_._v(" 中进行调试，那有没有想过直接就在 "),e("code",[_._v("Chrome")]),_._v(" 中来修改我们的代码呢？ 对于这样的想法，"),e("code",[_._v("Chrome DevTools")]),_._v(" 提供了哪些支持呢？")]),_._v(" "),e("h2",{attrs:{id:"_1-在-chrome-中修改你的文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-在-chrome-中修改你的文件"}},[_._v("#")]),_._v(" 1. 在 "),e("code",[_._v("Chrome")]),_._v(" 中修改你的文件")]),_._v(" "),e("p",[_._v("有时在代码执行的位置也是最容易编辑代码的位置（对于前端来说也就是浏览器）。如果你把项目的文件夹直接拖到 "),e("code",[_._v("Source")]),_._v(" 面板，"),e("code",[_._v("DevTools")]),_._v(" 会将你做出的修改同步到系统的文件中。")]),_._v(" "),e("p",[_._v("这对于快速修复代码非常方便！（我真的认识一个喜欢以这种方式做大部分编码的开发者）")]),_._v(" "),e("p",[e("img",{attrs:{src:"/imgs/debug/workspace_source.gif",alt:"img"}})]),_._v(" "),e("p",[_._v("等等，其实它可以更好...")]),_._v(" "),e("h2",{attrs:{id:"_2-workspace-支持即时同步样式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-workspace-支持即时同步样式"}},[_._v("#")]),_._v(" 2. "),e("code",[_._v("Workspace")]),_._v(" 支持即时同步样式")]),_._v(" "),e("p",[_._v("正如我们刚才所说，一旦设置好了 "),e("code",[_._v("DevTools workspace")]),_._v("，就可以在 "),e("code",[_._v("Sources")]),_._v(" 面板中编辑 "),e("code",[_._v("HTML")]),_._v(" 和 "),e("code",[_._v("JavaScript")]),_._v("（或者甚至是 "),e("code",[_._v("TypeScript")]),_._v("，如果你有"),e("code",[_._v("sourcemaps")]),_._v("）文件，按 "),e("code",[_._v("ctrl + s")]),_._v(" 后它将被保存 在文件系统中。")]),_._v(" "),e("p",[_._v("但是在样式方面它提供了更好的支持。 因为即使你只是在 "),e("em",[_._v("“元素”")]),_._v(" 面板的 "),e("em",[_._v("“样式”")]),_._v(" 部分中编辑样式规则，它也会立即同步。 请注意，是立刻！")]),_._v(" "),e("p",[e("img",{attrs:{src:"/imgs/debug/workspace_edit.gif",alt:"img"}})]),_._v(" "),e("p",[e("strong",[_._v('"黑魔法!"')])]),_._v(" "),e("h2",{attrs:{id:"_3-为新选择器选择目标位置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-为新选择器选择目标位置"}},[_._v("#")]),_._v(" 3. 为新选择器选择目标位置")]),_._v(" "),e("p",[_._v("如果要向现有选择器添加新样式，很容易：只需在 "),e("code",[_._v("“元素”")]),_._v(" 面板的 "),e("code",[_._v("“样式”")]),_._v(" 部分中找到该选择器，然后开始编写 "),e("code",[_._v("CSS")]),_._v("。 但如果还没有这样的选择器，则需要按下"),e("code",[_._v("New Style Rule")]),_._v(" 按钮。")]),_._v(" "),e("p",[_._v("当你使用工作区时，新样式规则的默认定位为 - "),e("code",[_._v("“inspector-stylesheet：1”")]),_._v(" 如果你不想规则在这个位置显示，只需按住 "),e("code",[_._v("New Style Rule")]),_._v(" 按钮，就可以看到一个列出所有 "),e("code",[_._v("CSS")]),_._v(" 文件的选项。选择目的地，新规则就会保存在那里！")]),_._v(" "),e("p",[e("img",{attrs:{src:"/imgs/debug/workspace_css.gif",alt:"img"}})]),_._v(" "),e("h2",{attrs:{id:"_4-workspace-允许-css-注入"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-workspace-允许-css-注入"}},[_._v("#")]),_._v(" 4. "),e("code",[_._v("Workspace")]),_._v(" 允许 "),e("code",[_._v("CSS")]),_._v(" 注入！")]),_._v(" "),e("p",[_._v("设置工作区后，浏览器中所做的更改不仅会持久的保存到文件系统中，而且，"),e("code",[_._v("CSS")]),_._v(" 的更改保存在文件系统后，立即就被浏览器选中并显示在你的页面上。"),e("strong",[_._v("并不需要手动刷新。")])]),_._v(" "),e("p",[_._v("敲黑板：我们 "),e("code",[_._v("没有使用额外的工具")]),_._v(" - 没有 "),e("code",[_._v("webpack")]),_._v(" 的热更新模块或者其他东西 - 只有一个本地服务以及 "),e("code",[_._v("DevTools' workspace")]),_._v(" 而已。")]),_._v(" "),e("p",[e("img",{attrs:{src:"/imgs/debug/workspace_style.gif",alt:"img"}})])])}),[],!1,null,null,null);v.default=o.exports}}]);